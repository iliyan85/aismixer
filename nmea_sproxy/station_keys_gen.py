import os
from cryptography.hazmat.primitives.asymmetric import ec
from cryptography.hazmat.primitives import serialization
import base64

# 1. –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –∫–ª—é—á–æ–≤–∞ –¥–≤–æ–π–∫–∞
private_key = ec.generate_private_key(ec.SECP256R1())

# 2. –ó–∞–ø–∏—Å –Ω–∞ —á–∞—Å—Ç–Ω–∏—è –∫–ª—é—á
with open(os.path.join('nmea_sproxy', 'station_private.key'), 'wb') as f:
    f.write(private_key.private_bytes(
        encoding=serialization.Encoding.PEM,
        format=serialization.PrivateFormat.TraditionalOpenSSL,
        encryption_algorithm=serialization.NoEncryption()
    ))

# 3. –ò–∑–≤–ª–∏—á–∞–Ω–µ –∏ –∑–∞–ø–∏—Å –Ω–∞ –ø—É–±–ª–∏—á–Ω–∏—è –∫–ª—é—á (PEM —Ñ–æ—Ä–º–∞—Ç)
public_key = private_key.public_key()
with open(os.path.join('nmea_sproxy', 'station_public.pem'), 'wb') as f:
    f.write(public_key.public_bytes(
        encoding=serialization.Encoding.PEM,
        format=serialization.PublicFormat.SubjectPublicKeyInfo
    ))

# 4. –ò–∑–≤–ª–∏—á–∞–Ω–µ –Ω–∞ –ø—É–±–ª–∏—á–Ω–∏—è –∫–ª—é—á –≤ –∫–æ–º–ø—Ä–µ—Å–∏—Ä–∞–Ω X962 —Ñ–æ—Ä–º–∞—Ç
compressed = public_key.public_bytes(
    encoding=serialization.Encoding.X962,
    format=serialization.PublicFormat.CompressedPoint
)

print("üì¶ Base64-–∫–æ–º–ø—Ä–µ—Å–∏—Ä–∞–Ω –ø—É–±–ª–∏—á–µ–Ω –∫–ª—é—á:")
print(base64.b64encode(compressed).decode())
